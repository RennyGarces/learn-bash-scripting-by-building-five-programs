builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
touch questionnaire.sh
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
nano questionnaire.sh
sh questionnaire.sh
__vsc_prompt_cmd_original
clear
bash questionnaire.sh
which bash
nano questionnaire.sh
./questionnaire.sh
ls --color=auto -l
chmod +x questionnaire.sh
ls --color=auto -l
./questionnaire.sh
nano questionnaire.sh
./questionnaire.sh
nano questionnaire.sh
./questionnaire.sh
nano questionnaire.sh
nano questionnaire.sh
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
nano questionnaire.sh
./questionnaire.sh
nano questionnaire.sh
./questionnaire.sh
__vsc_prompt_cmd_original
nano questionnaire.sh
./questionnaire.sh
nano questionnaire.sh
./questionnaire.sh
echo --help
man echoi
man echo
man echo
nano questionnaire.sh
nano questionnaire.sh
./questionnaire.sh
nano questionnaire.sh
./questionnaire.sh
nano questionnaire.sh
nano questionnaire.sh
./questionnaire.sh
nano questionnaire.sh
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
nano questionnaire.sh
nano questionnaire.sh
./questionnaire.sh
./questionnaire.sh
touch countdown.sh
chmod +x countdown.sh
nano questionnaire.sh
nano countdown.sh
./countdown.sh
./countdown.sh arg1, arg2,arg3
./countdown.sh arg1,arg2,arg3
./countdown.sh arg1, arg2, arg3
./countdown.sh arg1, arg2, arg3
./countdown.sh arg1 arg2 arg3
clear
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n d37fce63-8de6-4af8-8717-42f1d90d79f0
cat /proc/self/environ
echo -n d37fce63-8de6-4af8-8717-42f1d90d79f0
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2/node' -p '"98c28ef5c1cd" + JSON.stringify(process.env) + "98c28ef5c1cd"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
nano countdown.sh
nano countdown.sh
nano countdown.sh
./countdown.sh
./countdown.sh arg1 arg2 arg3
help
man if
help if
nano countdown.sh
nano countdown.sh
nano countdown.sh
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
clear
./countdown.sh arg1
arg1
./countdown.sh
nano countdown.sh
arg1
./countdown.sh
nano countdown.sh
./countdown.sh 4
./countdown.sh 5
help if
help
help if
help expression
help [[ expression ]]
help
help test
nano ./countdown.sh
clear
./countdown.sh 5
__vsc_prompt_cmd_original
[[ 4 -le 5 ]]
$?
echo $?[[ 4 -le 5 ]]
echo $? [[ 4 -le 5 ]]
echo [[ 4 -le 5 ]] $?
echo [[ 4 -le 5 ]]
echo $? [[ 4 -le 5 ]]
echo $?
[[ 4 -le 5 ]]
echo $?
__vsc_prompt_cmd_original
[[ 4 -ge 5 ]]
echo $?
[[ 4 -ge 5 ]]
[[ 10 -ne 5 ]]
clear
bad_command
ls --color=auto
ls --color=auto bad_command
ls --color=auto echo $?
bad_command
ls --color=auto bad_command
ls --color=auto
ls --color=auto -Y
ls --color=auto -y
help test
[[ -s countdown.sh ]]
[[ -a countdown.sh ]]
[[ -a bad_file.text ]]
[[ -a bad_file.txt ]]
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
[[ -n ./countdown.sh ]]
[[ -x countdown.sh ]]
help [[
[[ -x countdown.sh && 5 -le 4 ]]
[[ -x countdown.sh || 5 -le 4 ]]
nano countdown.sh
./countdown.sh 1
./countdown.sh 30
30
./countdown.sh 30
./countdown.sh 0
help
nano countdown.sh
./countdown.sh 10
help
ls --color=auto /
ls --color=auto /bin
sleep
help sleep
help
sleep
help sleep
man sleep
man sleep
nano countdown.sh
sleep 3
nano countdown.sh
nano countdown.sh
./countdown.sh 3
nano countdown.sh
./countdown.sh 3
nano countdown.sh
./countdown.sh 1
nano countdown.sh
nano countdown.sh
nano countdown.sh
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n 0a4af79e-581a-4a9c-9b55-c3a838c9d525
cat /proc/self/environ
echo -n 0a4af79e-581a-4a9c-9b55-c3a838c9d525
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2/node' -p '"28dbc6f6bed5" + JSON.stringify(process.env) + "28dbc6f6bed5"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n eb0c92fc-d160-4105-9fb4-1a9800f7bb40
cat /proc/self/environ
echo -n eb0c92fc-d160-4105-9fb4-1a9800f7bb40
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/0ee08df0cf4527e40edc9aa28f4b5bd38bbff2b2/node' -p '"9524759955fd" + JSON.stringify(process.env) + "9524759955fd"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
help while
nano countdown.sh
./countdown.sh 5
nano countdown.sh
./countdown.sh 10
clear
touch bingo.sh
chmod x+ bingo.sh
chmod +x bingo.sh
nano bingo.sh
./bingo.sh
printenv
echo LANG
echo LANG
LANG
echo $LANG
declare -p. -p
declare -p
echo $RANDOM
clear
nano bingo.sh
./bingo.sh
./bingo.sh
nano bingo.sh
./bingo.sh
clear
./bingo.sh $1
./bingo.sh i=0
./bingo.sh I=0
I=0
echo I
echo $I
(( i++ ))
(( I++ ))
echo $I
help let
clear
(( I += 10 ))
echo $I
(( I + 4 ))
$(( I + 4 ))
__vsc_prompt_cmd_original
echo $(( I + 4 ))
echo I
echo $I
J = $(( I -6 ))
j = $(( I -6 ))
J = $(( I -6 ))
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
echo $I
J=$(( I - 6 ))
echo j
echo J
echo $J
clear
echo J bingo.sh countdown.sh countdown.sh.save nano.save questionnaire.sh questionnaire.sh.save 5 + 25
echo $J bingo.sh countdown.sh countdown.sh.save nano.save questionnaire.sh questionnaire.sh.save 5 + 25
echo $J
echo $J *5
echo $J*5
echo $J bingo.sh countdown.sh countdown.sh.save nano.save questionnaire.sh questionnaire.sh.save 5
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
echo $((J bingo.sh countdown.sh countdown.sh.save nano.save questionnaire.sh questionnaire.sh.save 5 + 25 ))
echo J
echo $J
declare -p
declare -p J
declare -p RANDOM
echo RANDOM % 75
echo RANDOM%75
echo $RANDOM%75
echo $RANDOM % 75
echo $RANDOM
./bingo.sh
nano bingo.sh
__vsc_prompt_cmd_original
echo $((RANDOM % 75 ))
echo $((RANDOM 1 % 75 ))
echo $((RANDOM % 1 75 ))
echo $((RANDOM % 75+1 ))
